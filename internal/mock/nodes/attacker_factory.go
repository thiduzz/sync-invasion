// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/nodes/attacker_factory.go

// Package mock_nodes is a generated GoMock package.
package mock_nodes

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	nodes "github.com/thiduzz/code-kata-invasion/internal/nodes"
)

// MockAttackerFactoryInterface is a mock of AttackerFactoryInterface interface.
type MockAttackerFactoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAttackerFactoryInterfaceMockRecorder
}

// MockAttackerFactoryInterfaceMockRecorder is the mock recorder for MockAttackerFactoryInterface.
type MockAttackerFactoryInterfaceMockRecorder struct {
	mock *MockAttackerFactoryInterface
}

// NewMockAttackerFactoryInterface creates a new mock instance.
func NewMockAttackerFactoryInterface(ctrl *gomock.Controller) *MockAttackerFactoryInterface {
	mock := &MockAttackerFactoryInterface{ctrl: ctrl}
	mock.recorder = &MockAttackerFactoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAttackerFactoryInterface) EXPECT() *MockAttackerFactoryInterfaceMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockAttackerFactoryInterface) Generate(attackerType interface{}, attackerId uint) (*nodes.Attacker, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate", attackerType, attackerId)
	ret0, _ := ret[0].(*nodes.Attacker)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Generate indicates an expected call of Generate.
func (mr *MockAttackerFactoryInterfaceMockRecorder) Generate(attackerType, attackerId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockAttackerFactoryInterface)(nil).Generate), attackerType, attackerId)
}
